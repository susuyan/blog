# 了解事件响应链

## 概述

应用程序使用响应者对象接收和处理事件. 响应者对象是UIResponder类的任何实例，常见的子类包括`UIView` ， `UIViewController`和`UIApplication` . 响应者接收原始事件数据，并且必须处理事件或将其转发到另一个响应者对象. 当您的应用接收到事件时，UIKit会自动将该事件定向到最合适的响应者对象，即第一响应者 .

![](media/15752947366954.png)

UIKit 根据事件的类型将对象指定为事件的第一响应者。事件类型包括：

| 事件类型 | 响应者 |
| --- | --- |
| Touch Events | 发生触摸的视图 |
| Press Events | 具有焦点的对象 |
| ShakeMotion Events | 指定的对象 |
| Remote Events | 指定的对象 |
| Editing Menu Message | 指定的对象 |

> 与加速度计，陀螺仪和磁力计有关的运动事件不遵循响应程序链. 相反，Core Motion将这些事件直接传递到指定的对象. 有关更多信息，请参见Core Motion框架.

控件使用动作消息直接与其关联的目标对象进行通信。当用户与控件交互式，控件会将操作消息发送到其目标对象。动作消息不是事件，但他们仍可以利用响应链。当控件的目标对象为nil，UIKit从目标对象开始并遍历响应程序链，直到找到实现适当操作方法的对象为止。

手势识别器会先收到触摸和点击事件，然后再进行查看。如果视图的手势识别器无法识别一系列触摸，则UIKit会将触摸发送到视图。如果视图无法处理触摸，则UIKit会将其向上传递到响应者链。

## 确定哪个响应者包含触摸事件
UIKit使用基于视图的`hit-testing`来确定触摸事件发生的位置。具体来说，UIKit将触摸位置与视图层次结构中视图对象的边界进行比较。`UIView`的`hitTest(_: with:)`方法遍历视图层次结构，查找包含指定触摸的最深子视图，该子视图成为触摸事件的第一响应者。

发生触摸时，`UIKit`会创建一个`**UITouch**`对象并将其与视图关联. 随着触摸位置或其他参数的更改，`UIKit`会使用新信息更新相同的`UITouch`对象. 唯一不变的属性是视图. （即使触摸位置移到原始视图之外，触摸的`**view**`属性中的值也不会更改.）触摸结束时，`UIKit`释放`UITouch`对象.
## 修改响应者链
您可以通过覆盖响应者对象的`next`属性来更改响应者链. 执行此操作时，下一个响应者是您返回的对象。

许多UIKit类已经重写此属性并返回特定的对象，包括：
* `UIView`对象. 如果视图是视图控制器的根视图，则下一个响应者是视图控制器； 否则，下一个响应者是视图的超级视图.
* `UIViewController` objects.
    * 如果视图控制器的视图是窗口的根视图，则下一个响应者是窗口对象.
    * 如果视图控制器是由另一个视图控制器呈现的，则下一个响应者是呈现视图控制器.
    * `UIWindow` 对象。 window的下一个响应者是`UIApplication`对象
* `UIApplication`对象. 下一个响应者是应用程序委托，但仅当应用程序委托是`UIResponder`的实例且不是视图，视图控制器或应用程序对象本身时，才是下一个响应者. 
